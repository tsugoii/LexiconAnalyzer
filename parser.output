State 9 conflicts: 1 reduce/reduce
State 37 conflicts: 7 shift/reduce
State 62 conflicts: 7 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_variable: optional_variable variable
    4                  | %empty

    5 optional_parameters: parameter optional_parameter
    6                    | parameter
    7                    | %empty

    8 variable: IDENTIFIER ':' type IS statement_

    9 parameter: IDENTIFIER ':' type

   10 optional_parameter: ',' parameter optional_parameter
   11                   | %empty

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement END ';'

   16 statement_: statement
   17           | error ';'

   18 statement: expression ';'
   19          | REDUCE operator reductions ENDREDUCE ';'
   20          | IF expression THEN statement_ ELSE statement_ ENDIF ';'
   21          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE ';'

   22 reductions: reductions statement_
   23           | %empty

   24 operator: ADDOP
   25         | MULOP

   26 case: WHEN INT_LITERAL ARROW statement_

   27 optional_case: optional_case case
   28              | %empty

   29 expression: '(' expression ')'
   30           | expression binary_operator expression
   31           | NOTOP expression
   32           | INT_LITERAL
   33           | REAL_LITERAL
   34           | BOOL_LITERAL
   35           | IDENTIFIER

   36 binary_operator: ADDOP
   37                | MULOP
   38                | REMOP
   39                | EXPOP
   40                | RELOP
   41                | ANDOP
   42                | OROP


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 29
    ')' (41) 29
    ',' (44) 10
    ':' (58) 8 9
    ';' (59) 2 15 17 18 19 20 21
    error (256) 17
    IDENTIFIER (258) 2 8 9 35
    INT_LITERAL (259) 26 32
    REAL_LITERAL (260) 33
    BOOL_LITERAL (261) 34
    OROP (262) 42
    ANDOP (263) 41
    RELOP (264) 40
    ADDOP (265) 24 36
    MULOP (266) 25 37
    REMOP (267) 38
    EXPOP (268) 39
    NOTOP (269) 31
    BEGIN_ (270) 15
    BOOLEAN (271) 14
    END (272) 15
    ENDREDUCE (273) 19
    FUNCTION (274) 2
    INTEGER (275) 12
    IS (276) 8 21
    IF (277) 20
    THEN (278) 20
    REAL (279) 13
    REDUCE (280) 19
    RETURNS (281) 2
    ELSE (282) 20
    ENDIF (283) 20
    CASE (284) 21
    OTHERS (285) 21
    ARROW (286) 21 26
    ENDCASE (287) 21
    WHEN (288) 26


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    optional_variable (42)
        on left: 3 4
        on right: 1 3
    optional_parameters (43)
        on left: 5 6 7
        on right: 2
    variable (44)
        on left: 8
        on right: 3
    parameter (45)
        on left: 9
        on right: 5 6 10
    optional_parameter (46)
        on left: 10 11
        on right: 5 10
    type (47)
        on left: 12 13 14
        on right: 2 8 9
    body (48)
        on left: 15
        on right: 1
    statement_ (49)
        on left: 16 17
        on right: 8 20 21 22 26
    statement (50)
        on left: 18 19 20 21
        on right: 15 16
    reductions (51)
        on left: 22 23
        on right: 19 22
    operator (52)
        on left: 24 25
        on right: 19
    case (53)
        on left: 26
        on right: 27
    optional_case (54)
        on left: 27 28
        on right: 21 27
    expression (55)
        on left: 29 30 31 32 33 34 35
        on right: 18 20 21 29 30 31
    binary_operator (56)
        on left: 36 37 38 39 40 41 42
        on right: 30


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 7 (optional_parameters)

    optional_parameters  go to state 8
    parameter            go to state 9


State 5

    0 $accept: function $end .

    $default  accept


State 6

    1 function: function_header optional_variable . body
    3 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    9 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 15


State 9

    5 optional_parameters: parameter . optional_parameter
    6                    | parameter .

    ','  shift, and go to state 16

    RETURNS   reduce using rule 6 (optional_parameters)
    RETURNS   [reduce using rule 11 (optional_parameter)]
    $default  reduce using rule 6 (optional_parameters)

    optional_parameter  go to state 17


State 10

    8 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 18


State 11

   15 body: BEGIN_ . statement END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 28
    expression  go to state 29


State 12

    3 optional_variable: optional_variable variable .

    $default  reduce using rule 3 (optional_variable)


State 13

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 14

    9 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 30
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 33


State 15

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 30
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 34


State 16

   10 optional_parameter: ',' . parameter optional_parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 35


State 17

    5 optional_parameters: parameter optional_parameter .

    $default  reduce using rule 5 (optional_parameters)


State 18

    8 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 30
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 36


State 19

   35 expression: IDENTIFIER .

    $default  reduce using rule 35 (expression)


State 20

   32 expression: INT_LITERAL .

    $default  reduce using rule 32 (expression)


State 21

   33 expression: REAL_LITERAL .

    $default  reduce using rule 33 (expression)


State 22

   34 expression: BOOL_LITERAL .

    $default  reduce using rule 34 (expression)


State 23

   31 expression: NOTOP . expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 37


State 24

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 38


State 25

   19 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 39
    MULOP  shift, and go to state 40

    operator  go to state 41


State 26

   21 statement: CASE . expression IS optional_case OTHERS ARROW statement_ ENDCASE ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 42


State 27

   29 expression: '(' . expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 43


State 28

   15 body: BEGIN_ statement . END ';'

    END  shift, and go to state 44


State 29

   18 statement: expression . ';'
   30 expression: expression . binary_operator expression

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51
    ';'    shift, and go to state 52

    binary_operator  go to state 53


State 30

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 31

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 32

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 33

    9 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 9 (parameter)


State 34

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 54


State 35

   10 optional_parameter: ',' parameter . optional_parameter

    ','  shift, and go to state 16

    $default  reduce using rule 11 (optional_parameter)

    optional_parameter  go to state 55


State 36

    8 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 56


State 37

   30 expression: expression . binary_operator expression
   31           | NOTOP expression .

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51

    OROP      [reduce using rule 31 (expression)]
    ANDOP     [reduce using rule 31 (expression)]
    RELOP     [reduce using rule 31 (expression)]
    ADDOP     [reduce using rule 31 (expression)]
    MULOP     [reduce using rule 31 (expression)]
    REMOP     [reduce using rule 31 (expression)]
    EXPOP     [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)

    binary_operator  go to state 53


State 38

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF ';'
   30 expression: expression . binary_operator expression

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51
    THEN   shift, and go to state 57

    binary_operator  go to state 53


State 39

   24 operator: ADDOP .

    $default  reduce using rule 24 (operator)


State 40

   25 operator: MULOP .

    $default  reduce using rule 25 (operator)


State 41

   19 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 23 (reductions)

    reductions  go to state 58


State 42

   21 statement: CASE expression . IS optional_case OTHERS ARROW statement_ ENDCASE ';'
   30 expression: expression . binary_operator expression

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51
    IS     shift, and go to state 59

    binary_operator  go to state 53


State 43

   29 expression: '(' expression . ')'
   30           | expression . binary_operator expression

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51
    ')'    shift, and go to state 60

    binary_operator  go to state 53


State 44

   15 body: BEGIN_ statement END . ';'

    ';'  shift, and go to state 61


State 45

   42 binary_operator: OROP .

    $default  reduce using rule 42 (binary_operator)


State 46

   41 binary_operator: ANDOP .

    $default  reduce using rule 41 (binary_operator)


State 47

   40 binary_operator: RELOP .

    $default  reduce using rule 40 (binary_operator)


State 48

   36 binary_operator: ADDOP .

    $default  reduce using rule 36 (binary_operator)


State 49

   37 binary_operator: MULOP .

    $default  reduce using rule 37 (binary_operator)


State 50

   38 binary_operator: REMOP .

    $default  reduce using rule 38 (binary_operator)


State 51

   39 binary_operator: EXPOP .

    $default  reduce using rule 39 (binary_operator)


State 52

   18 statement: expression ';' .

    $default  reduce using rule 18 (statement)


State 53

   30 expression: expression binary_operator . expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 62


State 54

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 55

   10 optional_parameter: ',' parameter optional_parameter .

    $default  reduce using rule 10 (optional_parameter)


State 56

    8 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 64
    statement   go to state 65
    expression  go to state 29


State 57

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF ';'

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 66
    statement   go to state 65
    expression  go to state 29


State 58

   19 statement: REDUCE operator reductions . ENDREDUCE ';'
   22 reductions: reductions . statement_

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    ENDREDUCE     shift, and go to state 67
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 68
    statement   go to state 65
    expression  go to state 29


State 59

   21 statement: CASE expression IS . optional_case OTHERS ARROW statement_ ENDCASE ';'

    $default  reduce using rule 28 (optional_case)

    optional_case  go to state 69


State 60

   29 expression: '(' expression ')' .

    $default  reduce using rule 29 (expression)


State 61

   15 body: BEGIN_ statement END ';' .

    $default  reduce using rule 15 (body)


State 62

   30 expression: expression . binary_operator expression
   30           | expression binary_operator expression .

    OROP   shift, and go to state 45
    ANDOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    REMOP  shift, and go to state 50
    EXPOP  shift, and go to state 51

    OROP      [reduce using rule 30 (expression)]
    ANDOP     [reduce using rule 30 (expression)]
    RELOP     [reduce using rule 30 (expression)]
    ADDOP     [reduce using rule 30 (expression)]
    MULOP     [reduce using rule 30 (expression)]
    REMOP     [reduce using rule 30 (expression)]
    EXPOP     [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)

    binary_operator  go to state 53


State 63

   17 statement_: error . ';'

    ';'  shift, and go to state 70


State 64

    8 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 8 (variable)


State 65

   16 statement_: statement .

    $default  reduce using rule 16 (statement_)


State 66

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF ';'

    ELSE  shift, and go to state 71


State 67

   19 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 72


State 68

   22 reductions: reductions statement_ .

    $default  reduce using rule 22 (reductions)


State 69

   21 statement: CASE expression IS optional_case . OTHERS ARROW statement_ ENDCASE ';'
   27 optional_case: optional_case . case

    OTHERS  shift, and go to state 73
    WHEN    shift, and go to state 74

    case  go to state 75


State 70

   17 statement_: error ';' .

    $default  reduce using rule 17 (statement_)


State 71

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF ';'

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 76
    statement   go to state 65
    expression  go to state 29


State 72

   19 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 19 (statement)


State 73

   21 statement: CASE expression IS optional_case OTHERS . ARROW statement_ ENDCASE ';'

    ARROW  shift, and go to state 77


State 74

   26 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 78


State 75

   27 optional_case: optional_case case .

    $default  reduce using rule 27 (optional_case)


State 76

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF ';'

    ENDIF  shift, and go to state 79


State 77

   21 statement: CASE expression IS optional_case OTHERS ARROW . statement_ ENDCASE ';'

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 80
    statement   go to state 65
    expression  go to state 29


State 78

   26 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 81


State 79

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF . ';'

    ';'  shift, and go to state 82


State 80

   21 statement: CASE expression IS optional_case OTHERS ARROW statement_ . ENDCASE ';'

    ENDCASE  shift, and go to state 83


State 81

   26 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 63
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    IF            shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 84
    statement   go to state 65
    expression  go to state 29


State 82

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF ';' .

    $default  reduce using rule 20 (statement)


State 83

   21 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE . ';'

    ';'  shift, and go to state 85


State 84

   26 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 26 (case)


State 85

   21 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE ';' .

    $default  reduce using rule 21 (statement)
