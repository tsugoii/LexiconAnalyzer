State 42 conflicts: 2 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'

    3 optional_parameter: optional_parameter ',' parameter
    4                   | parameter
    5                   | %empty

    6 parameter: IDENTIFIER ':' type

    7 optional_variable: optional_variable variable
    8                  | %empty

    9 variable: IDENTIFIER ':' type IS statement_

   10 type: INTEGER
   11     | BOOLEAN

   12 body: BEGIN_ statement_ END ';'

   13 statement_: statement ';'
   14           | error ';'

   15 statement: expression
   16          | IF expression THEN statement_ ELSE statement_ ENDIF

   17 $@1: %empty

   18 statement: CASE expression $@1 IS optional_case OTHERS ARROW statement_ ENDCASE
   19          | REDUCE operator reductions ENDREDUCE

   20 operator: ADDOP
   21         | SUBOP
   22         | MULOP
   23         | DIVOP
   24         | REMOP
   25         | EXPOP

   26 case: WHEN INT_LITERAL ARROW statement_

   27 optional_case: case optional_case
   28              | case

   29 reductions: reductions statement_
   30           | %empty

   31 expression: expression ANDOP relation
   32           | expression OROP relation
   33           | NOTOP expression
   34           | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP factor
   38     | term SUBOP factor
   39     | factor

   40 factor: factor MULOP primary
   41       | factor DIVOP primary
   42       | factor EXPOP primary
   43       | factor REMOP primary
   44       | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 45
    ')' (41) 45
    ',' (44) 3
    ':' (58) 6 9
    ';' (59) 2 12 13 14
    error (256) 14
    IDENTIFIER <iden> (258) 2 6 9 49
    INT_LITERAL <value> (259) 26 46
    BOOL_LITERAL <value> (260) 48
    REAL_LITERAL <value> (261) 47
    NOTOP <oper> (262) 33
    ADDOP <oper> (263) 20 37
    MULOP <oper> (264) 22 40
    RELOP <oper> (265) 35
    SUBOP <oper> (266) 21 38
    DIVOP <oper> (267) 23 41
    EXPOP <oper> (268) 25 42
    REMOP <oper> (269) 24 43
    ANDOP (270) 31
    OROP (271) 32
    BEGIN_ (272) 12
    BOOLEAN (273) 11
    END (274) 12
    ENDREDUCE (275) 19
    FUNCTION (276) 2
    INTEGER (277) 10
    IS (278) 9 18
    REDUCE (279) 19
    RETURNS (280) 2
    IF <value> (281) 16
    THEN <value> (282) 16
    ELSE <value> (283) 16
    ENDIF <value> (284) 16
    WHEN <value> (285) 26
    CASE <value> (286) 18
    OTHERS <value> (287) 18
    ARROW <value> (288) 18 26
    ENDCASE <value> (289) 18


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    function (41)
        on left: 1
        on right: 0
    function_header (42)
        on left: 2
        on right: 1
    optional_parameter (43)
        on left: 3 4 5
        on right: 2 3
    parameter (44)
        on left: 6
        on right: 3 4
    optional_variable (45)
        on left: 7 8
        on right: 1 7
    variable <value> (46)
        on left: 9
        on right: 7
    type (47)
        on left: 10 11
        on right: 2 6 9
    body <value> (48)
        on left: 12
        on right: 1
    statement_ <value> (49)
        on left: 13 14
        on right: 9 12 16 18 26 29
    statement <value> (50)
        on left: 15 16 18 19
        on right: 13
    $@1 (51)
        on left: 17
        on right: 18
    operator <oper> (52)
        on left: 20 21 22 23 24 25
        on right: 19
    case <value> (53)
        on left: 26
        on right: 27 28
    optional_case <value> (54)
        on left: 27 28
        on right: 18 27
    reductions <value> (55)
        on left: 29 30
        on right: 19 29
    expression <value> (56)
        on left: 31 32 33 34
        on right: 15 16 18 31 32 33 45
    relation <value> (57)
        on left: 35 36
        on right: 31 32 34 35
    term <value> (58)
        on left: 37 38 39
        on right: 35 36 37 38
    factor <value> (59)
        on left: 40 41 42 43 44
        on right: 37 38 39 40 41 42 43
    primary <value> (60)
        on left: 45 46 47 48 49
        on right: 40 41 42 43 44


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    $default  reduce using rule 8 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 5 (optional_parameter)

    optional_parameter  go to state 8
    parameter           go to state 9


State 5

    0 $accept: function $end .

    $default  accept


State 6

    1 function: function_header optional_variable . body
    7 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    6 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameter . RETURNS type ';'
    3 optional_parameter: optional_parameter . ',' parameter

    RETURNS  shift, and go to state 15
    ','      shift, and go to state 16


State 9

    4 optional_parameter: parameter .

    $default  reduce using rule 4 (optional_parameter)


State 10

    9 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 17


State 11

   12 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 28
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 12

    7 optional_variable: optional_variable variable .

    $default  reduce using rule 7 (optional_variable)


State 13

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 14

    6 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36

    type  go to state 37


State 15

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS . type ';'

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36

    type  go to state 38


State 16

    3 optional_parameter: optional_parameter ',' . parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 39


State 17

    9 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 35
    INTEGER  shift, and go to state 36

    type  go to state 40


State 18

   14 statement_: error . ';'

    ';'  shift, and go to state 41


State 19

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


State 20

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 21

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


State 22

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 23

   33 expression: NOTOP . expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 42
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 24

   19 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 43
    MULOP  shift, and go to state 44
    SUBOP  shift, and go to state 45
    DIVOP  shift, and go to state 46
    EXPOP  shift, and go to state 47
    REMOP  shift, and go to state 48

    operator  go to state 49


State 25

   16 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 50
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 26

   18 statement: CASE . expression $@1 IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 51
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 27

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression  go to state 52
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 28

   12 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 53


State 29

   13 statement_: statement . ';'

    ';'  shift, and go to state 54


State 30

   15 statement: expression .
   31 expression: expression . ANDOP relation
   32           | expression . OROP relation

    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56

    $default  reduce using rule 15 (statement)


State 31

   34 expression: relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 57

    $default  reduce using rule 34 (expression)


State 32

   36 relation: term .
   37 term: term . ADDOP factor
   38     | term . SUBOP factor

    ADDOP  shift, and go to state 58
    SUBOP  shift, and go to state 59

    $default  reduce using rule 36 (relation)


State 33

   39 term: factor .
   40 factor: factor . MULOP primary
   41       | factor . DIVOP primary
   42       | factor . EXPOP primary
   43       | factor . REMOP primary

    MULOP  shift, and go to state 60
    DIVOP  shift, and go to state 61
    EXPOP  shift, and go to state 62
    REMOP  shift, and go to state 63

    $default  reduce using rule 39 (term)


State 34

   44 factor: primary .

    $default  reduce using rule 44 (factor)


State 35

   11 type: BOOLEAN .

    $default  reduce using rule 11 (type)


State 36

   10 type: INTEGER .

    $default  reduce using rule 10 (type)


State 37

    6 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 6 (parameter)


State 38

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type . ';'

    ';'  shift, and go to state 64


State 39

    3 optional_parameter: optional_parameter ',' parameter .

    $default  reduce using rule 3 (optional_parameter)


State 40

    9 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 65


State 41

   14 statement_: error ';' .

    $default  reduce using rule 14 (statement_)


State 42

   31 expression: expression . ANDOP relation
   32           | expression . OROP relation
   33           | NOTOP expression .

    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56

    ANDOP     [reduce using rule 33 (expression)]
    OROP      [reduce using rule 33 (expression)]
    $default  reduce using rule 33 (expression)


State 43

   20 operator: ADDOP .

    $default  reduce using rule 20 (operator)


State 44

   22 operator: MULOP .

    $default  reduce using rule 22 (operator)


State 45

   21 operator: SUBOP .

    $default  reduce using rule 21 (operator)


State 46

   23 operator: DIVOP .

    $default  reduce using rule 23 (operator)


State 47

   25 operator: EXPOP .

    $default  reduce using rule 25 (operator)


State 48

   24 operator: REMOP .

    $default  reduce using rule 24 (operator)


State 49

   19 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 30 (reductions)

    reductions  go to state 66


State 50

   16 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   31 expression: expression . ANDOP relation
   32           | expression . OROP relation

    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56
    THEN   shift, and go to state 67


State 51

   18 statement: CASE expression . $@1 IS optional_case OTHERS ARROW statement_ ENDCASE
   31 expression: expression . ANDOP relation
   32           | expression . OROP relation

    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56

    $default  reduce using rule 17 ($@1)

    $@1  go to state 68


State 52

   31 expression: expression . ANDOP relation
   32           | expression . OROP relation
   45 primary: '(' expression . ')'

    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56
    ')'    shift, and go to state 69


State 53

   12 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 70


State 54

   13 statement_: statement ';' .

    $default  reduce using rule 13 (statement_)


State 55

   31 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    relation  go to state 71
    term      go to state 32
    factor    go to state 33
    primary   go to state 34


State 56

   32 expression: expression OROP . relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    relation  go to state 72
    term      go to state 32
    factor    go to state 33
    primary   go to state 34


State 57

   35 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    term     go to state 73
    factor   go to state 33
    primary  go to state 34


State 58

   37 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    factor   go to state 74
    primary  go to state 34


State 59

   38 term: term SUBOP . factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    factor   go to state 75
    primary  go to state 34


State 60

   40 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    primary  go to state 76


State 61

   41 factor: factor DIVOP . primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    primary  go to state 77


State 62

   42 factor: factor EXPOP . primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    primary  go to state 78


State 63

   43 factor: factor REMOP . primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    primary  go to state 79


State 64

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 65

    9 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 80
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 66

   19 statement: REDUCE operator reductions . ENDREDUCE
   29 reductions: reductions . statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    ENDREDUCE     shift, and go to state 81
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 82
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 67

   16 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 83
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 68

   18 statement: CASE expression $@1 . IS optional_case OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 84


State 69

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 70

   12 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 12 (body)


State 71

   31 expression: expression ANDOP relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 57

    $default  reduce using rule 31 (expression)


State 72

   32 expression: expression OROP relation .
   35 relation: relation . RELOP term

    RELOP  shift, and go to state 57

    $default  reduce using rule 32 (expression)


State 73

   35 relation: relation RELOP term .
   37 term: term . ADDOP factor
   38     | term . SUBOP factor

    ADDOP  shift, and go to state 58
    SUBOP  shift, and go to state 59

    $default  reduce using rule 35 (relation)


State 74

   37 term: term ADDOP factor .
   40 factor: factor . MULOP primary
   41       | factor . DIVOP primary
   42       | factor . EXPOP primary
   43       | factor . REMOP primary

    MULOP  shift, and go to state 60
    DIVOP  shift, and go to state 61
    EXPOP  shift, and go to state 62
    REMOP  shift, and go to state 63

    $default  reduce using rule 37 (term)


State 75

   38 term: term SUBOP factor .
   40 factor: factor . MULOP primary
   41       | factor . DIVOP primary
   42       | factor . EXPOP primary
   43       | factor . REMOP primary

    MULOP  shift, and go to state 60
    DIVOP  shift, and go to state 61
    EXPOP  shift, and go to state 62
    REMOP  shift, and go to state 63

    $default  reduce using rule 38 (term)


State 76

   40 factor: factor MULOP primary .

    $default  reduce using rule 40 (factor)


State 77

   41 factor: factor DIVOP primary .

    $default  reduce using rule 41 (factor)


State 78

   42 factor: factor EXPOP primary .

    $default  reduce using rule 42 (factor)


State 79

   43 factor: factor REMOP primary .

    $default  reduce using rule 43 (factor)


State 80

    9 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 9 (variable)


State 81

   19 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 82

   29 reductions: reductions statement_ .

    $default  reduce using rule 29 (reductions)


State 83

   16 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 85


State 84

   18 statement: CASE expression $@1 IS . optional_case OTHERS ARROW statement_ ENDCASE

    WHEN  shift, and go to state 86

    case           go to state 87
    optional_case  go to state 88


State 85

   16 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 89
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 86

   26 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 90


State 87

   27 optional_case: case . optional_case
   28              | case .

    WHEN  shift, and go to state 86

    $default  reduce using rule 28 (optional_case)

    case           go to state 87
    optional_case  go to state 91


State 88

   18 statement: CASE expression $@1 IS optional_case . OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 92


State 89

   16 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 93


State 90

   26 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 94


State 91

   27 optional_case: case optional_case .

    $default  reduce using rule 27 (optional_case)


State 92

   18 statement: CASE expression $@1 IS optional_case OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 95


State 93

   16 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 16 (statement)


State 94

   26 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 96
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 95

   18 statement: CASE expression $@1 IS optional_case OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    BOOL_LITERAL  shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 97
    statement   go to state 29
    expression  go to state 30
    relation    go to state 31
    term        go to state 32
    factor      go to state 33
    primary     go to state 34


State 96

   26 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 26 (case)


State 97

   18 statement: CASE expression $@1 IS optional_case OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 98


State 98

   18 statement: CASE expression $@1 IS optional_case OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 18 (statement)
